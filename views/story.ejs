<!DOCTYPE html>
<head>
    <title></title>
    <link rel="stylesheet" href="/style.css">
</head>
<body>
<form id="myForm">
    <h1>Describe an image</h1>
    <div class="form-control">
        <input type="text" id="prompt" placeholder="Enter Text" />
      </div>
    <div class="form-control">
        <select name="size" id="size">
            <option value="small">Small</option>
            <option value="medium" selected>Medium</option>
            <option value="large">Large</option>
        </select>
    </div>
    <button type="submit" class="btn">Generate</button>
    
</form>
<button  class="btn" id="done" >Done</button>

<section class="image">
    <div class="image-container">
        <h2 class="msg"></h2>
        <img src="" alt="" id="image">
    </div>


    
</section>

<form method="POST" id="saveImageForm" action="/rooms/<%= group._id%>/urls">
    <button class="btn" id="save">Save</button>
</form>


 
<script src="/socket.io/socket.io.js"></script>

<script>
    var socket = io('http://localhost:3000');

    let room = '<%= group.group %>'

    document.querySelector("#myForm").addEventListener("submit", onSubmit);
document.querySelector("#save").style.display = "none";

//document.getElementById("done").addEventListener("click", reviewUrls);
document.getElementById("done").style.display = "none";



/*let story = document.getElementById("story");
let submitStory = document.getElementById("submitStory");

submitStory.addEventListener("click", submitStory)


story.addEventListener("change", () => {
    let myStory = story.value;
    let data = {
        myStory,
        id: "story"
    }
    socket.emit('startStory', (data));
})

socket.on('copyStory', (data) => {
    let storyElement = document.getElementById(data.id);
    storyElement.value = data.myStory;
})*/

function onSubmit(e){
   
    e.preventDefault();

    document.querySelector('.msg').textContent = "";
    document.querySelector('#image').src = "";

    let pValue = document.getElementById("prompt").value;
    let sValue = document.getElementById("size").value;

    const prompt = document.getElementById("prompt").value;
    const size = document.getElementById("size").value;

    if(prompt === ""){
        alert("please add some text");
        return;
    }
    myData = {
        pId: "prompt",
        sId: "size",
        pValue,
        sValue
    }
    socket.emit('formSubmit', (myData));

    generateImageRequest(prompt, size)
}

let urls = [];
let imageUrl = "";

async function generateImageRequest(prompt, size){
    try{

        const response = await fetch('http://localhost:3000', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                prompt, size
            })
        });

        if(!response.ok){
            throw new Error('that image could not be generated');
        }

        const data = await response.json();
       // console.log(data);

       imageUrl = data.data;

       

       document.querySelector('#image').src = imageUrl;
       document.querySelector("#save").style.display = "block";
       document.getElementById("done").style.display = "block";

       let sendData = {
        imageUrl,
        id: "image",
        saveId: "save",
        doneId: "done"
       }

       socket.emit('generateImage', sendData);

    } catch (error) {
        document.querySelector('.msg').textContent = error;
    }
}

document.querySelector("#save").addEventListener("click", review2);

document.getElementById("done").addEventListener("click", showUrl)

function showUrl(){
    //console.log(group.group)
    let link = "/rooms/<%= group._id%>/urls";
    let data = {
        link,

        room: '<%= group.group %>'
    }
    console.log('the data here is ', data);
    socket.emit('showUrl', data)
    window.location = link;
   
}




async function review2(){
    const saveResponse = await fetch('/rooms/<%= group._id%>/urls', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Access-Control-Allow-Headers': '*'
        },
        body: JSON.stringify({
            imageUrl
        })
       })

       if(!saveResponse.ok){
            throw new Error('image could not be saved');
       }
}


async function reviewUrls(){
    try{

const response = await fetch('/rooms/<%= group._id%>/urls', {
    method: 'GET',
    headers: {
        'Content-Type': 'application/json'
    }
});

if(!response.ok){
    throw new Error('that image could not be generated');
}

} catch (error) {
        document.querySelector('.msg').textContent = error;
    }
}


function review(){
    //location.href = "/urls";
    urls.push(imageUrl);
    console.log('urls saved are: ', urls);
    let url1 = urls[0];
    let url2 = urls[1];
    let url3 = urls[2];
    console.log(url1)
    console.log(url2)
    console.log(url3)
    if (urls.length >= 3) {
        fetch('/urls', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                url1: url1,
                url2: url2,
                url3: url3
            })
        }).then(response => {
            if (response.ok) {
                console.log('URLs saved successfully');
                location.href = "/urls";
            } else {
                console.log('Failed to save URLs');
            }
        }).catch(error => {
            console.log('Error:', error);
        });
    }
    }

    socket.emit('join', {room}); 

socket.on('showingUrl', data => {
    console.log('show urls');
    window.location = data.link;
})
    

socket.on('fillDetails', (data) => {
    console.log('broadcasted');

    let myPrompt = document.getElementById(data.pId);
    let mySize = document.getElementById(data.sId);

    myPrompt.value = data.pValue;
    mySize.value = data.sValue;
   
})

socket.on('transferImage', (sendData) => {
    console.log('transfer image');
    console.log('The url', sendData.imageUrl);
    console.log('The id ', sendData.id);
    document.getElementById(sendData.id).src = sendData.imageUrl;
    document.getElementById(sendData.saveId).style.display = "block";
    document.getElementById(sendData.doneId).style.display = "block";
     
})
</script>


</body>
</html>